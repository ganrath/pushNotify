{"version":3,"sources":["components/customHook/useFetch.js","components/Store/index.js","components/Header.js","components/List/Checkbox.js","components/List/CustomFilter.js","components/List/Filter.js","components/List/TextDetails.js","components/List/List.js","components/List/ListDetails.js","App.js","serviceWorker.js","index.js"],"names":["useFetch","StoreContext","React","createContext","DispatchContext","initialState","list","listerror","sortResult","filterResult","reducer","state","action","type","Object","assign","payload","result","length","filter","item","val","origin","name","gender","species","push","result_index","indexOf","splice","StoreProvider","children","url","useReducer","dispatch","useEffect","a","fetch","response","json","data","results","fetchData","then","catch","err","Provider","value","Header","data-testid","src","Checkbox","props","useContext","Fragment","className","role","details","aria-checked","id","onChange","e","target","checked","CustomFilter","head","checkbox","map","index","key","Filter","TextDetails","lefthead","righthead","List","image","date","present","Date","past","getFullYear","findYears","created","status","location","ListDetails","Home","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","error","Promise","resolve","reject","Notification","requestPermission","permissionResult","Error","swf","process","WP_PUBLIC_KEY","subscribeOptions","userVisibleOnly","applicationServerKey","ready","sw","pushManager","subscribe","require","ReactDOM","render","App","document","getElementById","URL","href","addEventListener","headers","contentType","get","unregister","reload","checkValidServiceWorker","askPermission","subscribeUserToPush"],"mappings":"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","file":"static/js/main.fe95caf2.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\nfunction useFetch(url) {\r\n  const [response, setResponse] = React.useState(null);\r\n  const [error, setError] = React.useState(false);\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        let response = await fetch(url);\r\n        let data = await response.json();\r\n        setResponse(data.results);\r\n        setError(true);\r\n      } catch (e) {\r\n        setError(true);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  return response;\r\n}\r\n\r\nexport default useFetch;\r\n","import React, {\r\n  createContext,\r\n  useReducer,\r\n  useEffect,\r\n  useContext,\r\n  useCallback\r\n} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport useFetch from \"../customHook/useFetch\";\r\n\r\nexport const StoreContext = React.createContext();\r\nexport const DispatchContext = React.createContext();\r\n\r\nconst initialState = {\r\n  list: [],\r\n  listerror: null,\r\n  sortResult: [],\r\n  filterResult: []\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"FETCH_SUCCESS\":\r\n      return Object.assign({}, state, {\r\n        list: action.payload,\r\n        sortResult: action.payload,\r\n        listerror: \"false\"\r\n      });\r\n    case \"FETCH_ERROR\":\r\n      return Object.assign({}, state, {\r\n        listerror: action.payload\r\n      });\r\n\r\n    case \"FETCH_SEARCH_RESULT\":\r\n      let result = \"\";\r\n      if (state.filterResult.length === 0) {\r\n        return state;\r\n      } else {\r\n        result = state.list.filter(item => {\r\n          for (let val in state.filterResult) {\r\n            if (\r\n              state.filterResult[val] == \"unknown\" ||\r\n              state.filterResult[val] == \"Post-Apocalyptic Earth\" ||\r\n              state.filterResult[val] == \"Nuptia 4\" ||\r\n              state.filterResult[val] == \"Other origins\"\r\n            ) {\r\n              if (item.origin.name === state.filterResult[val]) {\r\n                return true;\r\n              }\r\n            } else if (\r\n              state.filterResult[val] == \"Male\" ||\r\n              state.filterResult[val] == \"Female\"\r\n            ) {\r\n              if (item.gender === state.filterResult[val]) {\r\n                return true;\r\n              }\r\n            } else if (\r\n              state.filterResult[val] == \"Human\" ||\r\n              state.filterResult[val] == \"Mytholog\"\r\n            ) {\r\n              if (item.species === state.filterResult[val]) {\r\n                return true;\r\n              }\r\n            } else if (state.filterResult[val] == \"Other Species\") {\r\n              if (item.species !== \"Human\" && item.species !== \"Mytholog\") {\r\n                return true;\r\n              }\r\n            }\r\n          }\r\n        });\r\n        return Object.assign({}, state, {\r\n          sortResult: result\r\n        });\r\n      }\r\n\r\n    // console.log(result);\r\n\r\n    case \"CHECKBOX_SELECT\":\r\n      state.filterResult.push(action.payload);\r\n      return state;\r\n    case \"CHECKBOX_REMOVE\":\r\n      let result_index = state.filterResult.indexOf(action.payload);\r\n      state.filterResult.splice(result_index, 1);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport function StoreProvider({ children }) {\r\n  let url = \"https://rickandmortyapi.com/api/character/\";\r\n\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let response = await fetch(url);\r\n      let data = await response.json();\r\n      return data.results;\r\n    }\r\n    fetchData()\r\n      .then(data => {\r\n        dispatch({ type: \"FETCH_SUCCESS\", payload: data });\r\n      })\r\n      .catch(function(err) {\r\n        dispatch({ type: \"FETCH_ERROR\", payload: true });\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <DispatchContext.Provider value={dispatch}>\r\n      <StoreContext.Provider value={state}>{children}</StoreContext.Provider>\r\n    </DispatchContext.Provider>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div>\r\n      <header>\r\n        <img\r\n          data-testid=\"img-id\"\r\n          src=\"https://www.publicissapient.com/content/dam/ps-rebrand/brand/ps-logo-NEW.svg\"\r\n        />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState, useContext } from \"react\";\r\nimport CustomFilter from \"./CustomFilter\";\r\nimport { DispatchContext } from \"../Store/index\";\r\nfunction Checkbox(props) {\r\n  const dispatch = useContext(DispatchContext);\r\n  const handleChange = e => {\r\n    if (e.target.checked) {\r\n      dispatch({ type: \"CHECKBOX_SELECT\", payload: e.target.id });\r\n    } else {\r\n      dispatch({ type: \"CHECKBOX_REMOVE\", payload: e.target.id });\r\n    }\r\n    dispatch({ type: \"FETCH_SEARCH_RESULT\" });\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <label\r\n        className=\"container\"\r\n        role=\"checkbox\"\r\n        data-testid={`input-checkbox-${props.details}`}\r\n        aria-checked=\"false\"\r\n      >\r\n        {props.details}\r\n        <input\r\n          type=\"checkbox\"\r\n          id={props.details}\r\n          name={props.name}\r\n          onChange={handleChange}\r\n          data-testid=\"input-checkbox-checking\"\r\n        />\r\n        <span className=\"checkmark\"></span>\r\n      </label>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Checkbox;\r\n","import React, { useState, useContext } from \"react\";\r\nimport Checkbox from \"./Checkbox\";\r\nfunction CustomFilter(props) {\r\n  return (\r\n    <div className=\"filter-head\">\r\n      <h2>{props.head}</h2>\r\n      <ul>\r\n        {props.checkbox.map((item, index) => {\r\n          return (\r\n            <li key={index}>\r\n              <Checkbox details={item} name={props.head} />\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomFilter;\r\n","import React, { useState, useContext } from \"react\";\r\nimport CustomFilter from \"./CustomFilter\";\r\n\r\nfunction Filter() {\r\n  let filterCheck = [\"Human\", \"Mytholog\", \"Other Species\"],\r\n    genderCheck = [\"Male\", \"Female\"],\r\n    speciesCheck = [\r\n      \"unknown\",\r\n      \"Post-Apocalyptic Earth\",\r\n      \"Nuptia 4\",\r\n      \"Other origins\"\r\n    ];\r\n  return (\r\n    <div>\r\n      <h1>Filter</h1>\r\n      <CustomFilter head=\"Species\" checkbox={filterCheck} />\r\n      <CustomFilter head=\"Gender\" checkbox={genderCheck} />\r\n      <CustomFilter head=\"Origin\" checkbox={speciesCheck} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React, { useState, useContext } from \"react\";\r\n\r\nfunction TextDetails(props) {\r\n  return (\r\n    <div className=\"text-cont\">\r\n      <p>{props.lefthead}</p>\r\n      <p>{props.righthead}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TextDetails;\r\n","import React, { useState, useContext } from \"react\";\r\nimport TextDetails from \"./TextDetails\";\r\nfunction List(props) {\r\n  const findYears = date => {\r\n    var present = new Date();\r\n    var past = new Date(date);\r\n    let diff = present.getFullYear() - past.getFullYear();\r\n    return diff;\r\n  };\r\n  return (\r\n    <div className=\"List-cont\">\r\n      <div className=\"img-container\">\r\n        <img src={props.details.image} />\r\n        <div className=\"text-overlay\">\r\n          <h2 data-testid=\"name-h1\">{props.details.name}</h2>\r\n          <p>\r\n            id - {props.details.id} - created {findYears(props.details.created)}{\" \"}\r\n            years ago\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <TextDetails lefthead=\"Status\" righthead={props.details.status} />\r\n      <TextDetails lefthead=\"Species\" righthead={props.details.species} />\r\n      <TextDetails lefthead=\"Gender\" righthead={props.details.gender} />\r\n      <TextDetails lefthead=\"ORIGIN\" righthead={props.details.origin.name} />\r\n      <TextDetails\r\n        lefthead=\"Last Location\"\r\n        righthead={props.details.location.name}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { StoreContext } from \"../Store/index\";\r\nimport List from \"./List\";\r\nfunction ListDetails() {\r\n  const state = useContext(StoreContext);\r\n  return (\r\n    <div className=\"list-parent\">\r\n      {state.sortResult.map(item => {\r\n        return <List details={item} key={item.id} />;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListDetails;\r\n","import React from \"react\";\r\nimport { StoreProvider, StoreConsumer } from \"./components/Store/index\";\r\n\r\nimport Header from \"./components/Header\";\r\n\r\nimport Filter from \"./components/List/Filter\";\r\nimport ListDetails from \"./components/List/ListDetails\";\r\nimport \"./style.css\";\r\nconst Home = () => (\r\n  <div>\r\n    <StoreProvider>\r\n      <Header />\r\n      <div className=\"layout-plz\">\r\n        <Filter />\r\n        <ListDetails />\r\n      </div>\r\n    </StoreProvider>\r\n  </div>\r\n);\r\n\r\nexport default Home;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n        askPermission();\r\n        subscribeUserToPush(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n\r\nasync function askPermission() {\r\n  return new Promise(async function(resolve, reject) {\r\n    const permissionResult = await Notification.requestPermission(function(\r\n      result\r\n    ) {\r\n      resolve(result);\r\n    });\r\n  }).then(function(permissionResult) {\r\n    if (permissionResult !== \"granted\") {\r\n      throw new Error(\"We weren't granted permission.\");\r\n    }\r\n  });\r\n}\r\n\r\nasync function subscribeUserToPush(swf) {\r\n  console.log(process.env.WP_PUBLIC_KEY);\r\n  const subscribeOptions = {\r\n    userVisibleOnly: true,\r\n    applicationServerKey:\r\n      \"BEJugkYk_jWJ9wNsjvZhba8_CNN-ss1pvqBECcUuQ4tGgqx-EXtoYA1YTkkle07rqNpzPCgehm9M38C3N3zmCxc\"\r\n  };\r\n  let sw = await navigator.serviceWorker.ready;\r\n  let push = await sw.pushManager.subscribe(subscribeOptions);\r\n\r\n  console.log(push);\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nconst dotenv = require(\"dotenv\");\r\nlet result = dotenv.config();\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}